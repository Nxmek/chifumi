[{"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/index.js":"1","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/middlewares/size-middleware.js":"2","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/reducers/index.js":"3","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/app/Apps.jsx":"4","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/reducers/sign-up.reducer.js":"5","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/global/navBar/NavBar.jsx":"6","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/utils/random.js":"7","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/global/battlefield copy/test.jsx":"8"},{"size":818,"mtime":1673991676013,"results":"9","hashOfConfig":"10"},{"size":385,"mtime":1673991100545,"results":"11","hashOfConfig":"10"},{"size":191,"mtime":1673991100553,"results":"12","hashOfConfig":"10"},{"size":288,"mtime":1674154757315,"results":"13","hashOfConfig":"10"},{"size":795,"mtime":1673991100560,"results":"14","hashOfConfig":"10"},{"size":253,"mtime":1674227945487,"results":"15","hashOfConfig":"10"},{"size":107,"mtime":1674031389869,"results":"16","hashOfConfig":"10"},{"size":4716,"mtime":1674229000256,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"2b2i1t",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/index.js",[],[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/middlewares/size-middleware.js",["45"],[],"const sizeMiddleware = (store) => (next) => (action) => {\n  const state = store.getState();\n\n  if (action.type === \"SELECT_WORD\") {\n    next({ type: \"TOGGLE\" });\n  }\n\n  // if (\n  //   action.type === \"TOGGLE\" &&\n  //   action.payload.element.className.includes(\"green-block\")\n  // ) {\n  //   return next({ type: \"\" });\n  // }\n\n  return next(action);\n};\n\nexport default sizeMiddleware;\n","/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/reducers/index.js",[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/app/Apps.jsx",[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/redux/reducers/sign-up.reducer.js",[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/global/navBar/NavBar.jsx",[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/utils/random.js",[],[],"/Users/valentinlaveau/Desktop/projets/Perso/chifumi_react/src/components/global/battlefield copy/test.jsx",["46","47"],[],"import React, { useEffect, useState } from \"react\";\nimport mc from \"./battlefield.module.scss\";\nimport Rock from \"../../../img/rock.svg\";\nimport Paper from \"../../../img/paper.svg\";\nimport Scissors from \"../../../img/scissors.svg\";\n\nimport rockIa from \"../../../img/rock_ia.svg\";\nimport { randomNumber } from \"../../../utils/random\";\n\nconst Battlefield2 = () => {\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [iaChoice, setIaChoice] = useState(null);\n  const [playerScore, setPlayerScore] = useState(0);\n  const [iaScore, setIaScore] = useState(0);\n  const [result, setResult] = useState(\"\");\n\n  const playerMakeChoice = (pc) => {\n    setPlayerChoice(pc);\n  };\n\n  const iaMakeChoice = () => {\n    const iaRandom = randomNumber(1, 3);\n    switch (iaRandom) {\n      case 1:\n        setIaChoice(\"Rock\");\n        break;\n      case 2:\n        setIaChoice(\"Paper\");\n        break;\n      case 3:\n        setIaChoice(\"Scissors\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const ViewPlayerChoice = () => {\n    switch (playerChoice) {\n      case \"Rock\":\n        return Rock;\n      case \"Paper\":\n        return Paper;\n      case \"Scissors\":\n        return Scissors;\n      default:\n        break;\n    }\n  };\n  const ViewIaChoice = () => {\n    switch (iaChoice) {\n      case \"Rock\":\n        return Rock;\n      case \"Paper\":\n        return Paper;\n      case \"Scissors\":\n        return Scissors;\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setIaChoice(null);\n    setPlayerChoice(null);\n    setResult(\"\");\n  };\n  const fight = () => {\n    if (iaChoice !== null) {\n      if (iaChoice === playerChoice) {\n        setResult(\"egalite\");\n      } else if (playerChoice === \"Rock\" && iaChoice === \"Paper\") {\n        setResult(\"L'ordi gagne\");\n        addIS();\n      } else if (playerChoice === \"Rock\" && iaChoice === \"Scissors\") {\n        setResult(\"Tu gagnes\");\n        addPS();\n      } else if (playerChoice === \"Paper\" && iaChoice === \"Rock\") {\n        setResult(\"Tu gagnes\");\n        addPS();\n      } else if (playerChoice === \"Paper\" && iaChoice === \"Scissors\") {\n        setResult(\"L'ordi gagne\");\n        addIS();\n      } else if (playerChoice === \"Scissors\" && iaChoice === \"Rock\") {\n        setResult(\"L'ordi gagne\");\n        addIS();\n      } else if (playerChoice === \"Scissors\" && iaChoice === \"Paper\") {\n        setResult(\"Tu gagnes\");\n        addPS();\n      }\n    }\n    setTimeout(() => {\n      reset();\n    }, 800);\n  };\n  const addPS = () => {\n    setPlayerScore(playerScore + 1);\n  };\n  const addIS = () => {\n    setIaScore(iaScore + 1);\n  };\n\n  useEffect(() => {\n    console.log(Math.floor());\n    console.log(`playerChoice :  ${playerChoice}`);\n    if (playerChoice !== null) {\n      iaMakeChoice();\n    }\n  }, [playerChoice]);\n\n  useEffect(() => {\n    console.log(`ia :  ${iaChoice}`);\n    ViewIaChoice();\n    fight();\n  }, [iaChoice]);\n  return (\n    <div className={mc.container}>\n      {!!result ? (\n        <div className={mc.result}>\n          <h3>{result}</h3>\n        </div>\n      ) : (\n        <div className={mc.score}>\n          <div>\n            <h3>{`Ton score: ${playerScore}`}</h3>\n          </div>\n          <div>\n            <h3>{`Score de l'ordi: ${iaScore}`}</h3>\n          </div>\n        </div>\n      )}\n\n      <div className={mc.fightingZone}>\n        <div>\n          <h2>Toi</h2>\n          <div className={`adaptive-img-contain ${mc.signZone}`}>\n            <span>\n              <img src={ViewPlayerChoice()} alt=\"\" />\n            </span>\n          </div>\n        </div>\n        <div>\n          <h2>Ordi</h2>\n          <div className={`adaptive-img-contain ${mc.signZone}`}>\n            <span>\n              <img src={ViewIaChoice()} alt=\"\" />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className={mc.rules}>\n        <h3>Fait ton choix </h3>\n      </div>\n      <div className={mc.choosingZone}>\n        <div\n          className={`adaptive-img-contain ${mc.Rock}`}\n          onClick={() => {\n            playerMakeChoice(\"Rock\");\n          }}\n        >\n          <span>\n            <img src={Rock} alt=\"\" />\n          </span>\n        </div>\n        <div\n          className={`adaptive-img-contain ${mc.Rock}`}\n          onClick={() => {\n            playerMakeChoice(\"Paper\");\n          }}\n        >\n          <span>\n            <img src={Paper} alt=\"\" />\n          </span>\n        </div>\n        <div\n          className={`adaptive-img-contain ${mc.Rock}`}\n          onClick={() => {\n            playerMakeChoice(\"Scissors\");\n          }}\n        >\n          <span>\n            <img src={Scissors} alt=\"\" />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Battlefield2;\n",{"ruleId":"48","severity":1,"message":"49","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":115,"column":6,"nodeType":"55","endLine":115,"endColumn":16,"suggestions":"56"},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'rockIa' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ViewIaChoice' and 'fight'. Either include them or remove the dependency array.","ArrayExpression",["57"],{"desc":"58","fix":"59"},"Update the dependencies array to be: [ViewIaChoice, fight, iaChoice]",{"range":"60","text":"61"},[2884,2894],"[ViewIaChoice, fight, iaChoice]"]